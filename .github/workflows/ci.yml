name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          pip install -r etl/requirements.txt || true
          pip install -r services/predict/requirements.txt
      - name: Run ETL unit tests
        run: |
          pip install pytest
          pytest tests/unit/
      - name: Build FastAPI Docker image
        run: |
          docker build -t predict-service ./services/predict
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install

      - name: Lint frontend (eslint)
        run: npx eslint src || true

      - name: Test frontend (vitest)
        run: |
          if [ -f "vitest.config.ts" ]; then npx vitest run; fi

      - name: Build backend Docker image
        run: docker build -f Dockerfile.backend -t backend:ci .

      - name: Build frontend Docker image
        run: docker build -f Dockerfile.frontend -t frontend:ci .
